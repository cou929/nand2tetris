function Main.main 1
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
push constant 8000
call Memory.peek 1
pop local 0
push local 0
call Main.convert 1
push constant 0
return
function Main.convert 3
push constant 1
neg
pop local 2
label Main.convert.0.WHILE.CONT
push local 2
not
if-goto Main.convert.0.WHILE.END
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push local 1
push constant 16
gt
not
not
if-goto Main.convert.0.IF.ELSE
push argument 0
push local 0
and
push constant 0
eq
not
not
if-goto Main.convert.1.IF.ELSE
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
goto Main.convert.1.IF.END
label Main.convert.1.IF.ELSE
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
label Main.convert.1.IF.END
goto Main.convert.0.IF.END
label Main.convert.0.IF.ELSE
push constant 0
pop local 2
label Main.convert.0.IF.END
goto Main.convert.0.WHILE.CONT
label Main.convert.0.WHILE.END
push constant 0
return
function Main.nextMask 0
push argument 0
push constant 0
eq
not
if-goto Main.nextMask.2.IF.ELSE
push constant 1
return
goto Main.nextMask.2.IF.END
label Main.nextMask.2.IF.ELSE
push argument 0
push constant 2
call Math.multiply 2
return
label Main.nextMask.2.IF.END
function Main.fillMemory 0
label Main.fillMemory.1.WHILE.CONT
push argument 1
push constant 0
gt
not
if-goto Main.fillMemory.1.WHILE.END
push argument 0
push argument 2
call Memory.poke 2
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto Main.fillMemory.1.WHILE.CONT
label Main.fillMemory.1.WHILE.END
push constant 0
return